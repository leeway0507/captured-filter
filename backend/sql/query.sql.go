// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package sql

import (
	"context"
)

const getProduct = `-- name: GetProduct :many
SELECT
    id, brand, product_name, product_img_url, product_url, currency_code, retail_price, sale_price, kor_brand, kor_product_name, product_id, gender, color, category, category_spec, store_name, made_in, is_sale, sold_out, updated_at
FROM
    products
`

func (q *Queries) GetProduct(ctx context.Context) ([]Product, error) {
	rows, err := q.db.QueryContext(ctx, getProduct)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Product
	for rows.Next() {
		var i Product
		if err := rows.Scan(
			&i.ID,
			&i.Brand,
			&i.ProductName,
			&i.ProductImgUrl,
			&i.ProductUrl,
			&i.CurrencyCode,
			&i.RetailPrice,
			&i.SalePrice,
			&i.KorBrand,
			&i.KorProductName,
			&i.ProductID,
			&i.Gender,
			&i.Color,
			&i.Category,
			&i.CategorySpec,
			&i.StoreName,
			&i.MadeIn,
			&i.IsSale,
			&i.SoldOut,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
