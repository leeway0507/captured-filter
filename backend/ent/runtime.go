// Code generated by ent, DO NOT EDIT.

package ent

import (
	"backend/ent/deliveryagency"
	"backend/ent/product"
	"backend/ent/schema"
	"backend/ent/store"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	deliveryagencyFields := schema.DeliveryAgency{}.Fields()
	_ = deliveryagencyFields
	// deliveryagencyDescUpdatedAt is the schema descriptor for updated_at field.
	deliveryagencyDescUpdatedAt := deliveryagencyFields[3].Descriptor()
	// deliveryagency.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	deliveryagency.DefaultUpdatedAt = deliveryagencyDescUpdatedAt.Default.(func() time.Time)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescSoldOut is the schema descriptor for sold_out field.
	productDescSoldOut := productFields[11].Descriptor()
	// product.DefaultSoldOut holds the default value on creation for the sold_out field.
	product.DefaultSoldOut = productDescSoldOut.Default.(bool)
	// productDescUpdatedAt is the schema descriptor for updated_at field.
	productDescUpdatedAt := productFields[12].Descriptor()
	// product.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	product.DefaultUpdatedAt = productDescUpdatedAt.Default.(func() time.Time)
	storeFields := schema.Store{}.Fields()
	_ = storeFields
	// storeDescUpdatedAt is the schema descriptor for updated_at field.
	storeDescUpdatedAt := storeFields[12].Descriptor()
	// store.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	store.DefaultUpdatedAt = storeDescUpdatedAt.Default.(func() time.Time)
}
