// Code generated by ent, DO NOT EDIT.

package deliveryagency

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the deliveryagency type in the database.
	Label = "delivery_agency"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCountry holds the string denoting the country field in the database.
	FieldCountry = "country"
	// FieldVATReductionRate holds the string denoting the vat_reduction_rate field in the database.
	FieldVATReductionRate = "vat_reduction_rate"
	// FieldShippingFee holds the string denoting the shipping_fee field in the database.
	FieldShippingFee = "shipping_fee"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the deliveryagency in the database.
	Table = "delivery_agencies"
)

// Columns holds all SQL columns for deliveryagency fields.
var Columns = []string{
	FieldID,
	FieldCountry,
	FieldVATReductionRate,
	FieldShippingFee,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the DeliveryAgency queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCountry orders the results by the country field.
func ByCountry(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCountry, opts...).ToFunc()
}

// ByVATReductionRate orders the results by the VAT_reduction_rate field.
func ByVATReductionRate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVATReductionRate, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
